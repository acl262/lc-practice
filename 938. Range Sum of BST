/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    
    public List<Integer> constructArray (TreeNode root) {
        
        if (root == null) return null;
                
        List<Integer> res = new LinkedList<>();
        
        if(root.left != null) { 
             List<Integer> lf = new LinkedList<>();
             lf = constructArray(root.left);
            res.addAll(lf);
        }

        if (root.left == null && root.right == null) {res.add(root.val);}
        
        if(root.right != null) { 
           // res.addAll(constructArray(root.right));
            List<Integer> rt = new LinkedList<>();
            rt = constructArray(root.right);
            res.addAll(rt);
        }
        
        return res;
        
    }
    
    public int rangeSumBST(TreeNode root, int L, int R) {
        
    List<Integer> res = new LinkedList<>();
        
    res = constructArray(root);
        
     System.out.println(res);
    
    int left = 0, right = res.size()-1;
        
    for(int i = 0; i < res.size(); i++) {
        if (res.get(i) >= L) {
            left = i;
            break;}
    }
   
    for(int i = left; i < res.size(); i++) {
        if (res.get(i) > R) {
            right = i-1;
            break;}
    }
        
    int sum =0;
     for(int i = left; i <= right; i++) {  
         sum += res.get(i);
     }  
    
    return sum;
        }
   
}
